trigger:
- mainline
- multi_type_support_refactor

jobs:
- job: linux_build
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - script: tests/ci_build/ci_build.sh cpu tests/ci_build/build_via_cmake.sh
    displayName: 'Building Treelite...'
  - script: |
      TAG=manylinux2014_x86_64
      tests/ci_build/ci_build.sh cpu bash -c "cd python/ && python setup.py bdist_wheel --universal"
      tests/ci_build/ci_build.sh auditwheel_x86_64 auditwheel repair --only-plat --plat ${TAG} python/dist/*.whl
      rm -v python/dist/*.whl
      mv -v wheelhouse/*.whl python/dist/
      tests/ci_build/ci_build.sh cpu python tests/ci_build/rename_whl.py python/dist/*.whl $(Build.SourceVersion) ${TAG}
    displayName: 'Packaging Python wheel for Treelite...'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'python_linux_whl'
      targetPath: 'python/dist/'
  - script: |
      TAG=manylinux2014_x86_64
      tests/ci_build/ci_build.sh cpu bash -c "cd runtime/python/ && python setup.py bdist_wheel --universal"
      tests/ci_build/ci_build.sh auditwheel_x86_64 auditwheel repair --only-plat --plat ${TAG} runtime/python/dist/*.whl
      rm -v runtime/python/dist/*.whl
      mv -v wheelhouse/*.whl runtime/python/dist/
      tests/ci_build/ci_build.sh cpu python tests/ci_build/rename_whl.py runtime/python/dist/*.whl $(Build.SourceVersion) ${TAG}
    displayName: 'Packaging Python wheel for Treelite runtime...'
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'runtime_python_linux_whl'
      targetPath: 'runtime/python/dist/'
